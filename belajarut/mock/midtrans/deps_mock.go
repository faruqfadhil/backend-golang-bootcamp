// Code generated by MockGen. DO NOT EDIT.
// Source: midtrans/midtrans.go

// Package mock_midtrans is a generated GoMock package.
package mock_midtrans

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMidtrans is a mock of Midtrans interface.
type MockMidtrans struct {
	ctrl     *gomock.Controller
	recorder *MockMidtransMockRecorder
}

// MockMidtransMockRecorder is the mock recorder for MockMidtrans.
type MockMidtransMockRecorder struct {
	mock *MockMidtrans
}

// NewMockMidtrans creates a new mock instance.
func NewMockMidtrans(ctrl *gomock.Controller) *MockMidtrans {
	mock := &MockMidtrans{ctrl: ctrl}
	mock.recorder = &MockMidtransMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMidtrans) EXPECT() *MockMidtransMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockMidtrans) Send(ctx context.Context, cr float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", ctx, cr)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockMidtransMockRecorder) Send(ctx, cr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockMidtrans)(nil).Send), ctx, cr)
}
